from reportlab.lib.pagesizes import letter
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, PageBreak
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.units import inch
from reportlab.lib.colors import HexColor
import json
import os

def generate_pdf():
    # Load JSON data
    json_path = os.path.join('backend', 'data', 'disease_database.json')
    with open(json_path, 'r', encoding='utf-8') as f:
        diseases = json.load(f)

    # Set up PDF
    pdf_path = os.path.join('backend', 'diseases.pdf')
    doc = SimpleDocTemplate(pdf_path, pagesize=letter, rightMargin=72, leftMargin=72, topMargin=72, bottomMargin=18)
    styles = getSampleStyleSheet()
    title_style = ParagraphStyle(name='Title', fontSize=24, leading=28, textColor=HexColor('#4a7c59'), fontName='Helvetica-Bold')
    heading_style = ParagraphStyle(name='Heading', fontSize=16, leading=20, textColor=HexColor('#d4a017'), fontName='Helvetica-Bold')
    body_style = ParagraphStyle(name='Body', fontSize=12, leading=14, textColor=HexColor('#000000'))
    story = []

    # Title
    story.append(Paragraph('Ayurvedic Disease Database', title_style))
    story.append(Spacer(1, 0.5 * inch))

    # Diseases
    for idx, disease in enumerate(diseases, 1):
        story.append(Paragraph(f"{idx}. {disease['name']} ({disease.get('sanskrit', 'N/A')})", heading_style))
        story.append(Spacer(1, 0.2 * inch))
        
        story.append(Paragraph(f"<b>Source:</b> {disease.get('source', 'N/A')}", body_style))
        story.append(Paragraph(f"<b>Dosha Imbalance:</b> {', '.join(disease.get('dosha', ['N/A']))}", body_style))
        story.append(Paragraph(f"<b>Pathogenesis:</b> {disease.get('pathogenesis', 'N/A')}", body_style))
        story.append(Paragraph(f"<b>Modern Equivalent:</b> {disease.get('modernEquivalent', 'N/A')}", body_style))
        story.append(Spacer(1, 0.2 * inch))

        # Symptoms
        story.append(Paragraph('<b>Symptoms:</b>', heading_style))
        for symptom in disease.get('symptoms', ['N/A']):
            story.append(Paragraph(f"- {symptom}", body_style))
        
        # Treatments
        story.append(Paragraph('<b>Treatments:</b>', heading_style))
        for treatment in disease.get('treatments', [{'description': 'N/A', 'type': 'Unknown', 'ingredients': ['N/A'], 'source': 'N/A'}]):
            story.append(Paragraph(f"- {treatment.get('description', 'N/A')} ({treatment.get('type', 'Unknown')})", body_style))
            story.append(Paragraph(f"  Ingredients: {', '.join(treatment.get('ingredients', ['N/A']))}", body_style))
            story.append(Paragraph(f"  Source: {treatment.get('source', 'N/A')}", body_style))
        
        # Precautions
        story.append(Paragraph('<b>Precautions:</b>', heading_style))
        for precaution in disease.get('precautions', ['N/A']):
            story.append(Paragraph(f"- {precaution}", body_style))
        
        # Diet
        story.append(Paragraph('<b>Diet:</b>', heading_style))
        for diet_item in disease.get('diet', ['N/A']):
            story.append(Paragraph(f"- {diet_item}", body_style))
        
        # Lifestyle
        story.append(Paragraph('<b>Lifestyle:</b>', heading_style))
        for lifestyle_item in disease.get('lifestyle', ['N/A']):
            story.append(Paragraph(f"- {lifestyle_item}", body_style))
        
        story.append(Spacer(1, 0.5 * inch))
        story.append(PageBreak())

    # Footer
    story.append(Paragraph('Generated by Prakriti - Wellness Worldwide', body_style))
    story.append(Paragraph('Â© 2025 Prakriti', body_style))

    # Build PDF
    doc.build(story)
    print(f"PDF generated at: {pdf_path}")

if __name__ == '__main__':
    generate_pdf() 